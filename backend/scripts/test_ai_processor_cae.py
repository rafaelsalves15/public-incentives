#!/usr/bin/env python3
"""
Teste do AI Processor - Por que n√£o gera CAE codes eleg√≠veis?
"""

import sys
import os
sys.path.append('/app')

from app.db.database import SessionLocal
from app.services.ai_processor import AIProcessor
from app.db.models import Incentive
import logging

# Configurar logging
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def test_ai_processor_cae_generation():
    """Testa por que o AI Processor n√£o gera CAE codes eleg√≠veis"""
    
    print("ü§ñ TESTE DO AI PROCESSOR - GERA√á√ÉO DE CAE CODES")
    print("=" * 60)
    
    # Inicializar servi√ßos
    db = SessionLocal()
    ai_processor = AIProcessor(api_key=os.getenv('OPENAI_API_KEY'), session=db)
    
    try:
        # Obter primeiro incentivo
        incentive = db.query(Incentive).first()
        if not incentive:
            print("‚ùå Nenhum incentivo encontrado!")
            return
        
        print(f"üìã INCENTIVO: {incentive.title}")
        print(f"üéØ ID: {incentive.incentive_id}")
        print()
        
        # Verificar se j√° tem AI description
        current_ai_desc = incentive.ai_description
        print("üîç AI DESCRIPTION ATUAL:")
        print("-" * 30)
        print(f"CAE Codes: {current_ai_desc.get('eligible_cae_codes', []) if current_ai_desc else 'None'}")
        print(f"Setores: {current_ai_desc.get('eligible_sectors', []) if current_ai_desc else 'None'}")
        print()
        
        # Testar gera√ß√£o de AI description
        print("ü§ñ GERANDO NOVA AI DESCRIPTION...")
        print("-" * 40)
        
        # Simular o que o AI Processor faz
        prompt = f"""
        Analise este incentivo e gere uma descri√ß√£o estruturada em JSON:

        T√çTULO: {incentive.title}
        DESCRI√á√ÉO: {incentive.description or 'N/A'}

        IMPORTANTE: Voc√™ DEVE inferir e incluir:
        1. eligible_cae_codes: Lista de c√≥digos CAE espec√≠ficos que se aplicam
        2. eligible_sectors: Setores eleg√≠veis
        3. target_audience: P√∫blico-alvo
        4. summary: Resumo do incentivo

        Retorne APENAS JSON v√°lido com estes campos.
        """
        
        print("üìù PROMPT ENVIADO:")
        print(prompt)
        print()
        
        # Tentar gerar nova descri√ß√£o
        try:
            # Obter dados CSV do metadata
            metadata = incentive.incentive_metadata
            raw_csv_data = metadata.raw_csv_data if metadata else {}
            
            new_ai_desc = ai_processor.generate_ai_description(incentive, raw_csv_data)
            print("‚úÖ NOVA AI DESCRIPTION GERADA:")
            print("-" * 30)
            print(f"CAE Codes: {new_ai_desc.get('eligible_cae_codes', [])}")
            print(f"Setores: {new_ai_desc.get('eligible_sectors', [])}")
            print(f"P√∫blico-alvo: {new_ai_desc.get('target_audience', [])}")
            print(f"Resumo: {new_ai_desc.get('summary', 'N/A')}")
            print()
            
            # Comparar com a atual
            if new_ai_desc.get('eligible_cae_codes'):
                print("üéâ SUCESSO: Nova descri√ß√£o tem CAE codes!")
                print("üí° SOLU√á√ÉO: Reprocessar incentivos com AI Processor atualizado")
            else:
                print("‚ùå PROBLEMA: Nova descri√ß√£o tamb√©m n√£o tem CAE codes")
                print("üí° SOLU√á√ÉO: Verificar prompt do AI Processor")
                
        except Exception as e:
            print(f"‚ùå ERRO ao gerar nova descri√ß√£o: {e}")
        
        print("\n" + "=" * 60)
        print("üéØ CONCLUS√ïES:")
        print("1. Verificar se o prompt do AI Processor est√° correto")
        print("2. Verificar se o modelo est√° sendo instru√≠do a gerar CAE codes")
        print("3. Considerar reprocessar todos os incentivos")
        
    except Exception as e:
        logger.error(f"Erro no teste: {e}")
        print(f"‚ùå ERRO: {e}")
    
    finally:
        db.close()

if __name__ == "__main__":
    test_ai_processor_cae_generation()
